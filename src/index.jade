doctype html
html
	head
		meta(charset='utf-8')
		meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
		title Just Do It

		link(rel='stylesheet', type='text/css', href='build/build.css')

	body

		article

			section
				h1.bullet Just Do It
				h3.bullet Alex Jordan

			section
				h2.bullet About moi
				h3.bullet Arch Linux
				h3.bullet Emacs
				h3.bullet Git
				h3.bullet zsh
				h3.bullet Node.js
				h3.bullet Firefox

			section
				h2.bullet Also about moi
				h3.bullet Radical FLOSS zealot
				h3.bullet Self-hoster
				h3.bullet High school senior
				h3.bullet he/him

			section
				h2.bullet I'll get right into it.
				h3.bullet LOOK AT WHAT COMPUTERS CAN DO.

			section.emphatic-text(data-bespoke-backdrop='emphatic')
				pre
					code.language-sh.
						% python3
						Python 3.4.2 (default, Oct	8 2014, 10:45:20)
						[GCC 4.9.1] on linux
						Type "help", "copyright", "credits" or "license" for more information.
						>>>

			section
				h2.bullet Um, I see that every day.
				h3.bullet It's just a Python prompt.
				h3.bullet Yeah, but not everyone sees that.

			section
				h2.bullet Away from FLOSS...
				h3.bullet There's no equivalent.

			section
				h3.bullet On Windows, C# is the dominant language.
				h3.bullet On OS X, it's Swift.
				h3.bullet Guess what? They're both compiled.
				h3.bullet (Swift has the concept of "playgrounds", but it's not the same.)

			section
				h2.bullet So you want to use Python (on a proprietary platform)
				h3.bullet Have fun.
				h3.bullet C# <em>looks</em> like Windows.
				h3.bullet Swift <em>looks</em> like OS X.
				h3.bullet If you don't use them, you'll be fighting.

			section
				h2.bullet A language "looks" like something?
				h3.bullet Languages have designs,
				h3.bullet regardless of the author's intent.
				h3.bullet Any language that doesn't intentionally follow a design will fail.
				h3.bullet Unless, of course, it's orders of magnitude easier for web scripting and shared hosting.

			section
				img(src='images/php.png', width='500', height='268')

			section
				h2.bullet Operating systems have designs, too.
				h3.bullet A programming language takes a certain view of the world:
				h3.bullet How objects map to underlying resources
				h3.bullet How the filesystem works
				h3.bullet How processes and threads are modeled
				h3.bullet What users are

			section
				h2.bullet Example: OpenCV in Java
				h3.bullet In robotics, we started looking at OpenCV's Java bindings
				h3.bullet Matt: "where are the pointers?"
				h3.bullet Java doesn't have pointers...
				h3.bullet ...but the API looked like it should, because it was a port from C

			section
				h2.bullet In FLOSS?
				h3.bullet C <em>looks</em> like POSIX.
				h3.bullet Python <em>looks</em> like POSIX.
				h3.bullet Even shell is more POSIX than C# or Swift.
				h3.bullet It's POSIX all the way down.

			section
				h2.bullet Why POSIX?
				h3.bullet POSIX = Unix
				h3.bullet And Unix was built by engineers, for engineers
				h3.bullet Windows and OS X are built for users and enterprises

			section
				h2.bullet "The enterprise"
				h3.bullet C# and Swift are compiled because compiled languages are "fit for the enterprise"
				h3.bullet They're "what professionals use"
				h3.bullet They're performant
				h3.bullet C# and Swift are rigid and correct
				h3.bullet Python is not. Python is infinitely flexible.

			section
				h2.bullet Back to Python
				h3.bullet Python is flexible
				h3.bullet Python is somewhat forgiving
				h3.bullet Python requires no boilerplate
				h3.bullet <code>print('Hello World!')</code>

			section
				h2.bullet Why those things?
				h3.bullet Because Python is designed by engineers, for engineers
				h3.bullet Those things make sense
				h3.bullet They make for code that is elegant and beautiful

			section
				h2.bullet Elegance & beauty
				h3.bullet Ruby is the fully-fledged embodiment of this idea
				h3.bullet "Describe your program in an English sentence. Congradulations, you just wrote some Ruby."

			section.emphatic-text(data-bespoke-backdrop='emphatic')
				pre
					code.language-sh.
						% python3
						Python 3.4.2 (default, Oct	8 2014, 10:45:20)
						[GCC 4.9.1] on linux
						Type "help", "copyright", "credits" or "license" for more information.
						>>>

			section
				h2.bullet <code>% python3</code>
				h3.bullet Having an interactive prompt makes sense
				h3.bullet <em>Especially</em> since our community values hackability so much
				h3.bullet This is <em>the</em> reason why people teach programming with Python.

			section
				h2.bullet Just code
				h3.bullet Nothing getting in your way
				h3.bullet No boilerplate
				h3.bullet No overengineered architecture
				h3.bullet Just stuff that makes sense.
				h3.bullet "Why do I have to use this <code>AbstractUnicodeStringFactoryFactory</code>?

			section.emphatic-text(data-bespoke-backdrop='emphatic')
				h2.bullet So why do we lose them?

			section
				h2.bullet GNOME, we need to talk.
				h3.bullet Hey KDE, you should hear this too.
				h3.bullet Everything is complicated.
				h3.bullet Let's talk about a file synchronization tool in GNOME

			section
				h2.bullet GNOME file sync daemon
				h3.bullet GTK+
				h3.bullet GObject
				h3.bullet D-Bus
				h3.bullet XDG notifications

			section
				h2.bullet More, you say!?
				h3.bullet XDG user directories
				h3.bullet System tray
				h3.bullet Session startup
				h3.bullet dconf

			section
				p
					img.bullet(src='images/greatwallofchina.jpg', width='512', height='384')
				p.bullet <a href="https://commons.wikimedia.org/wiki/File:Great_wall_of_china-mutianyu_4.JPG">Public Domain</a>

			section
				h2.bullet All of this stuff gets in the way.
				h3.bullet To be clear: it's for a good reason.
				h3.bullet All of these things solve real problems
				h3.bullet And all of the people who work on these projects are good people.

			section
				h2.bullet But at the same time...
				h3.bullet <em>This</em> is why we're losing them.
				h3.bullet There's no path forward.
				h3.bullet I speak from personal experience when I say: it's not easy to learn this stuff.

			section
				h2.bullet That's where we lose them
				h3.bullet Suddenly there's way more stuff that you have to understand
				h3.bullet "Why do I have to use this <code>AbstractUnicodeStringFactoryFactory</code>?

			section
				h2.bullet Let's fix this: better docs
				h3.bullet I'll call out GLib in particular: there are no Python docs
				h3.bullet All the API examples are in C
				h3.bullet Not only that, there are no (comprehensive) tutorials
				h3.bullet Docs aren't fun, but they're the future
				
			section
				p
					img.bullet(src='images/Sufjan.png', width='353', height='390')
				p.bullet <a href="https://openhatch.org/wiki/Logo">Sufjan, the OpenHatch mascot</a>

			section
				h2.bullet OpenHatch
				h3.bullet OpenHatch is as critical as the FSF
				h3.bullet The FSF is very, very important
				h3.bullet But it's been doing short-term work for 30 years.
				h3.bullet OpenHatch is doing the long-term work:
				h3.bullet Ensuring that our community has people in it in 50 years.
				h3.bullet We need to invest in outreach programs, like OpenHatch
					
			section
				h2.bullet Last but not least: architecture
				h3.bullet We need to make it easier to transition from <code>print('Hello World!')</code> to GTK+ apps
				h3.bullet Lots of complex interdependencies
				h3.bullet These need to be learned at once, to a certain extent.

			section
				h2.bullet But how?
				h3.bullet There needs to be a more gradual way to adopt stuff.
				h3.bullet GObject needs to take a back seat
				h3.bullet Not go away, because it's still super useful
				h3.bullet But it needs to be possible to do stuff without it.

			section
				h2.bullet Duplication
				h3.bullet Yes, that may have some problems with duplicate efforts
				h3.bullet But that's what a long-term investment looks like.
				h3.bullet You put a little more in now, and get a lot more later.

			section
				h2.bullet Thoughts?
				h3.bullet <a href="https://twitter.com/strugee2">@strugee2</a>
				h3.bullet <a href="https://pump.strugee.net/alex">alex@pump.strugee.net</a>
				h3.bullet <a href="https://strugee.net/">strugee.net</a>

			section
				h2 Access this presention again
				h3 <a href="https://strugee.net/presentation-just-do-it">https://strugee.net/presentation-just-do-it</a>
				p
					img(src='images/qr.png', alt='QR code to presentation URL', width='200', height='200')
				h4 Or, <a href="https://github.com/strugee/presentation-just-do-it">check out the source</a>.
				
			section
				<a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /></a><br /><span xmlns:dct="http://purl.org/dc/terms/" href="http://purl.org/dc/dcmitype/Text" property="dct:title" rel="dct:type">Just Do It: The Approachability of Free Software For Beginners</span> by <a xmlns:cc="http://creativecommons.org/ns#" href="https://strugee.net/" property="cc:attributionName" rel="cc:attributionURL">Alex Jordan</a> is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike 4.0 International License</a>.

		script(src='build/build.js')
